{"version":3,"file":"leaflet.trackstats.umd.js","sources":["../src/cache.js","../src/stats.js","../src/stats.polyline.js","../src/stats.trackdrawer.js","../src/geoportail.js","../src/mapquest.js","../src/index.js"],"sourcesContent":["const metadatas = {};\nlet precision = 8;\n\n// Rounds to X decimals (IGN API supports up to 8, MapQuest up to 5)\nif (typeof Math.roundE === 'undefined') {\n  Math.roundE = function roundE(value, decimals) {\n    const pow = 10 ** decimals;\n    return Math.round(value * pow) / pow;\n  };\n}\n\nfunction getKeyLatLng(lat, lng, decimals) {\n  return `${Math.roundE(lng, decimals)}/${Math.roundE(lat, decimals)}`;\n}\n\nfunction getKey(coords, decimals) {\n  return getKeyLatLng(coords.lat, coords.lng, decimals);\n}\n\nmodule.exports = {\n  setPrecision(p) {\n    precision = p;\n    return this;\n  },\n\n  add(t, coords) {\n    const key = getKey(coords, precision);\n    if (!(key in metadatas)) metadatas[key] = {};\n\n    metadatas[key][t] = coords[t];\n\n    return this;\n  },\n  get(t, coords) {\n    const key = getKey(coords, precision);\n    return key in metadatas && t in metadatas[key] ? metadatas[key][t] : undefined;\n  },\n\n  has(t, coords) {\n    const key = getKey(coords, precision);\n    return key in metadatas && (t === null || t in metadatas[key]);\n  },\n  hasZ(coords) {\n    return this.has('z', coords);\n  },\n  hasSlope(coords) {\n    return this.has('slope', coords);\n  },\n\n  addZ(coords) {\n    this.add('z', coords);\n    return this;\n  },\n  addSlope(coords) {\n    this.add('slope', coords);\n    return this;\n  },\n\n  getAll(coords) {\n    const key = getKey(coords, precision);\n    const md = key in metadatas ? metadatas[key] : {};\n\n    return {\n      lat: coords.lat,\n      lng: coords.lng,\n      z: 'z' in md ? md.z : undefined,\n      slope: 'slope' in md ? md.slope : undefined,\n    };\n  },\n\n  clear() {\n    Object.keys(metadatas).forEach((x) => delete metadatas[x]);\n    return this;\n  },\n};\n","const L = require('leaflet');\n\nconst stats = L.Class.extend({\n  options: {},\n\n  initialize(latlngs, options) {\n    L.Util.setOptions(this, options);\n\n    this.startingDistance = 0;\n    this.distance = 0;\n    this.altMin = Number.MAX_VALUE;\n    this.altMax = Number.MIN_VALUE;\n    this.heightDiffUp = 0;\n    this.heightDiffDown = 0;\n    this.slopeMin = Number.MAX_VALUE;\n    this.slopeMax = Number.MIN_VALUE;\n    this.slopeTerrainMin = Number.MAX_VALUE;\n    this.slopeTerrainMax = Number.MIN_VALUE;\n    this.latlngs = [];\n\n    if (latlngs.length === 0) {\n      return;\n    }\n\n    const elevations = JSON.parse(JSON.stringify(latlngs)); // deep copy\n\n    this.altMin = elevations[0].z;\n    this.altMax = elevations[0].z;\n    this.slopeTerrainMin = elevations[0].slope;\n    this.slopeTerrainMax = elevations[0].slope;\n\n    elevations[0].dist = 0;\n    elevations[0].slopeOnTrack = 0;\n\n    this.latlngs.push(elevations[0]);\n\n    let j = 0;\n    for (let i = 1; i < elevations.length; i += 1) {\n      const localDistance = L.latLng(elevations[i]).distanceTo(L.latLng(this.latlngs[j])); // m\n      if (localDistance > 0) {\n        this.distance += localDistance / 1000; // km\n\n        j += 1;\n        this.latlngs[j] = elevations[i];\n        const current = this.latlngs[j];\n\n        current.dist = this.distance;\n\n        if (current.z) {\n          if (current.z < this.altMin) this.altMin = current.z;\n          if (current.z > this.altMax) this.altMax = current.z;\n\n          const altDiff = current.z - this.latlngs[j - 1].z;\n\n          if (altDiff < 0) {\n            this.heightDiffDown += Math.round(-altDiff);\n          } else if (altDiff > 0) {\n            this.heightDiffUp += Math.round(altDiff);\n          }\n          // else can happen if some data is missing, we choose to ignore it\n\n          current.slopeOnTrack = Math.round(Math.degrees(Math.atan(altDiff / localDistance)));\n        } else {\n          current.slopeOnTrack = 0;\n        }\n\n        if (current.slope) {\n          if (current.slope < this.slopeTerrainMin) this.slopeTerrainMin = current.slope;\n          if (current.slope > this.slopeTerrainMax) this.slopeTerrainMax = current.slope;\n        }\n      }\n    }\n\n    const size = this.latlngs.length;\n    for (let i = 0; i < size; i += 1) {\n      if (i > 3 && i < size - 4) {\n        this.latlngs[i].slopeOnTrack = (this.latlngs[i - 3].slopeOnTrack\n            + 2 * this.latlngs[i - 2].slopeOnTrack\n            + 4 * this.latlngs[i - 1].slopeOnTrack\n            + 8 * this.latlngs[i].slopeOnTrack\n            + 4 * this.latlngs[i + 1].slopeOnTrack\n            + 2 * this.latlngs[i + 2].slopeOnTrack\n            + this.latlngs[i + 3].slopeOnTrack)\n          / 22;\n\n        if (this.latlngs[i].slopeOnTrack < this.slopeMin) this.slopeMin = this.latlngs[i].slopeOnTrack;\n        if (this.latlngs[i].slopeOnTrack > this.slopeMax) this.slopeMax = this.latlngs[i].slopeOnTrack;\n      }\n    }\n\n    if (this.altMin === undefined) {\n      this.heightDiffUp = undefined;\n      this.heightDiffDown = undefined;\n      this.slopeMax = undefined;\n      this.slopeMin = undefined;\n    }\n  },\n\n  accumulate(accumulator) {\n    accumulator.latlngs = accumulator.latlngs.concat(\n      this.getLatLngs().map((x) => {\n        x.dist += accumulator.distance;\n        return x;\n      }),\n    );\n\n    accumulator.distance += this.distance;\n    accumulator.altMin = Math.min(this.altMin, accumulator.altMin);\n    accumulator.altMax = Math.max(this.altMax, accumulator.altMax);\n    accumulator.heightDiffUp += this.heightDiffUp;\n    accumulator.heightDiffDown += this.heightDiffDown;\n    accumulator.slopeMin = Math.min(this.slopeMin, accumulator.slopeMin);\n    accumulator.slopeMax = Math.max(this.slopeMax, accumulator.slopeMax);\n    accumulator.slopeTerrainMin = Math.min(this.slopeTerrainMin, accumulator.slopeTerrainMin);\n    accumulator.slopeTerrainMax = Math.max(this.slopeTerrainMax, accumulator.slopeTerrainMax);\n\n    return this;\n  },\n\n  getLatLngs() {\n    return JSON.parse(JSON.stringify(this.latlngs)); // deep copy\n  },\n  getDistance() {\n    return this.distance;\n  },\n  getAltMin() {\n    return this.altMin;\n  },\n  getAltMax() {\n    return this.altMax;\n  },\n  getSlopeMin() {\n    return this.slopeMin;\n  },\n  getSlopeMax() {\n    return this.slopeMax;\n  },\n  getHeightDiffUp() {\n    return this.heightDiffUp;\n  },\n  getHeightDiffDown() {\n    return this.heightDiffDown;\n  },\n  getSlopeTerrainMin() {\n    return this.slopeTerrainMin;\n  },\n  getSlopeTerrainMax() {\n    return this.slopeTerrainMax;\n  },\n});\n\nmodule.exports = stats;\n","const L = require('leaflet');\nconst cache = require('./cache');\nconst Stats = require('./stats');\n\nif (typeof Math.degrees === 'undefined') {\n  // Converts from radians to degrees.\n  Math.degrees = function degrees(radians) {\n    return (radians * 180) / Math.PI;\n  };\n}\n\nfunction getLatLngsFlatten(polyline) {\n  const latlngs = polyline.getLatLngs();\n\n  if (latlngs.length > 0 && Array.isArray(latlngs[0])) {\n    let result = [];\n    for (let j = 0; j < latlngs.length; j += 1) {\n      result = result.concat(latlngs[j]);\n    }\n\n    return result;\n  }\n  return latlngs;\n}\n\nL.Polyline.include({\n  _stats: undefined,\n\n  getStats() {\n    return this._stats;\n  },\n\n  fetchAltitude(fetcher, eventTarget) {\n    if (!('altitudes' in fetcher.features) || !fetcher.features.altitudes) {\n      return new Promise((_resolve, reject) => reject(new Error('Unsupported')));\n    }\n\n    cache.setPrecision(fetcher.precision);\n    const latlngs = Array.from(new Set(getLatLngsFlatten(this))).filter((coords) => !cache.hasZ(coords));\n\n    if (latlngs.length === 0) { return new Promise((resolve) => resolve()); }\n\n    if (eventTarget) {\n      eventTarget.fire('TrackStats:fetching', {\n        datatype: 'altitudes',\n        size: latlngs.length,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      fetcher.fetchAltitudes(latlngs, eventTarget).then((elevations) => {\n        elevations.forEach((x) => cache.addZ(x));\n\n        if (eventTarget) {\n          eventTarget.fire('TrackStats:done', {\n            datatype: 'altitudes',\n            size: elevations.length,\n          });\n        }\n        resolve();\n      }).catch((e) => reject(e));\n    });\n  },\n\n  fetchSlope(fetcher, eventTarget) {\n    if (!('slopes' in fetcher.features) || !fetcher.features.slopes) {\n      return new Promise((_resolve, reject) => reject(new Error('Unsupported')));\n    }\n\n    cache.setPrecision(fetcher.precision);\n    const latlngs = Array.from(new Set(getLatLngsFlatten(this))).filter((coords) => !cache.hasSlope(coords));\n\n    if (latlngs.length === 0) { return new Promise((resolve) => resolve()); }\n\n    if (eventTarget) {\n      eventTarget.fire('TrackStats:fetching', {\n        datatype: 'slopes',\n        size: latlngs.length,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      fetcher.fetchSlopes(latlngs, eventTarget).then((slopes) => {\n        slopes.forEach((x) => cache.addSlope(x));\n\n        if (eventTarget) {\n          eventTarget.fire('TrackStats:done', {\n            datatype: 'slopes',\n            size: slopes.length,\n          });\n        }\n        resolve();\n      }).catch((e) => reject(e));\n    });\n  },\n\n  fetchInfos(fetcher, eventTarget) {\n    const promises = [];\n    if ('altitudes' in fetcher.features && fetcher.features.altitudes) {\n      promises.push(this.fetchAltitude(fetcher, eventTarget));\n    }\n    if ('slopes' in fetcher.features && fetcher.features.slopes) {\n      promises.push(this.fetchSlope(fetcher, eventTarget));\n    }\n\n    return Promise.all(promises);\n  },\n\n  computeStats() {\n    const latlngs = getLatLngsFlatten(this).map((coords) => coords.getCachedInfos());\n    this._stats = new Stats(latlngs);\n    return this.getStats();\n  },\n});\n\nL.LatLng.prototype.getCachedInfos = function getCachedInfos() {\n  return cache.getAll(this);\n};\n","const L = require('leaflet');\nconst Stats = require('./stats');\n\nif (L.TrackDrawer !== undefined) {\n  L.TrackDrawer.Track.include({\n    _steps: undefined,\n    _total: undefined,\n    _i: 0,\n\n    _bindEvent() {\n      this.on('TrackDrawer:start', () => {\n        this._i += 1;\n      });\n      this.on('TrackDrawer:failed', (e) => {\n        this._i -= 1;\n        if (this._fireEvents) this.fire('TrackDrawer:statsfailed', { message: e.message });\n      });\n      this.on('TrackDrawer:done', () => {\n        this._finalizeRoute(this.options.fetcher).catch((e) => {\n          this._i -= 1;\n          if (this._fireEvents) this.fire('TrackDrawer:statsfailed', { message: e.message });\n        });\n      });\n    },\n\n    _finalizeRoute(fetcher) {\n      const routes = [];\n\n      let currentNode = this._getNode(this._firstNodeId);\n\n      this._nodesContainers.forEach(() => {\n        do {\n          const { nextEdge, nextNode } = this._getNext(currentNode);\n          if (currentNode === undefined || nextEdge === undefined) {\n            break;\n          }\n\n          routes.push(nextEdge);\n\n          currentNode = nextNode;\n        } while (currentNode.options.type !== 'stopover');\n      });\n\n      return new Promise((resolve, reject) => {\n        const promises = [];\n        routes.forEach((r) => {\n          promises.push(r.fetchInfos(fetcher, this).then(() => r.computeStats()));\n        });\n\n        Promise.all(promises).then(() => {\n          this._i -= 1;\n          if (this._i === 0) {\n            // Compute stats only if this._i is back to 0 (otherwise the track is out-of-date)\n            this._computeStats();\n          }\n          resolve();\n        }).catch((e) => reject(e));\n      });\n    },\n\n    getStatsTotal() {\n      return this._total;\n    },\n    getStatsSteps() {\n      return this._steps;\n    },\n\n    _computeStats() {\n      this._steps = [];\n      this._total = new Stats([]);\n      let local = new Stats([]);\n\n      let currentNode = this._getNode(this._firstNodeId);\n\n      if (currentNode !== undefined) {\n        this._nodesContainers.forEach((nodeContainer, idx) => {\n          currentNode._stats = {\n            startingDistance: local.getDistance(),\n            distance: this._total.getDistance(),\n            z: currentNode.getLatLng().getCachedInfos().z,\n          };\n\n          local = new Stats([]);\n          local.startingDistance = this._total.getDistance();\n\n          do {\n            const { nextEdge, nextNode } = this._getNext(currentNode);\n            if (currentNode === undefined || nextEdge === undefined) {\n              break;\n            }\n\n            const stats = nextEdge.getStats();\n            if (stats !== undefined) {\n              stats.accumulate(this._total).accumulate(local);\n            }\n            currentNode = nextNode;\n\n            currentNode._stats = {\n              startingDistance: local.getDistance(),\n              distance: this._total.getDistance(),\n              z: currentNode.getLatLng().getCachedInfos().z,\n            };\n          } while (currentNode.options.type !== 'stopover');\n\n          const edgeContainer = this._edgesContainers.get(idx);\n          edgeContainer._stats = local;\n          this._steps.push(local);\n        });\n      }\n\n      if (this._fireEvents) this.fire('TrackDrawer:statsdone', {});\n\n      return this;\n    },\n  });\n\n  L.TrackDrawer.Track.addInitHook('_bindEvent');\n}\n","const L = require('leaflet');\nconst Gp = require('geoportal-access-lib');\nconst corslite = require('@mapbox/corslite');\nconst Queue = require('promise-queue');\n\nfunction latLngToTilePixel(latlng, crs, zoom, tileSize, pixelOrigin) {\n  const layerPoint = crs.latLngToPoint(latlng, zoom).floor();\n  const tile = layerPoint.divideBy(tileSize).floor();\n  const tileCorner = tile.multiplyBy(tileSize).subtract(pixelOrigin);\n  const tilePixel = layerPoint.subtract(pixelOrigin).subtract(tileCorner);\n  return { tile, tilePixel };\n}\n\nmodule.exports = L.Class.extend({\n  options: {\n    queueConcurrency: 5,\n  },\n\n  initialize(apiKey, map, options) {\n    this._apiKey = apiKey;\n    this._map = map;\n    this.features = { altitudes: true, slopes: true };\n    this.precision = 8;\n    L.Util.setOptions(this, options);\n    this._queue = new Queue(this.options.queueConcurrency, Infinity);\n  },\n\n  fetchAltitudes(latlngs, eventTarget) {\n    const geometry = [];\n    const promises = [];\n\n    latlngs.forEach((coords) => {\n      geometry.push({\n        lon: coords.lng,\n        lat: coords.lat,\n      });\n      if (geometry.length === 50) {\n        // Launch batch\n        const g = geometry.splice(0);\n        promises.push(this._queue.add(() => this._fetchBatchAltitude(g, eventTarget)));\n      }\n    });\n\n    if (geometry.length > 0) {\n      // Launch last batch\n      const g = geometry.splice(0);\n      promises.push(this._queue.add(() => this._fetchBatchAltitude(g, eventTarget)));\n    }\n\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then((data) => {\n        const results = [];\n        data.forEach((x) => results.push(...x));\n        resolve(results);\n      }).catch((e) => reject(e));\n    });\n  },\n\n  _doFetchBatchAltitude(geometry, eventTarget, resolve, reject, retry) {\n    Gp.Services.getAltitude({\n      apiKey: this._apiKey,\n      sampling: geometry.length,\n      positions: geometry,\n      onSuccess: (result) => {\n        const elevations = [];\n        result.elevations.forEach((val) => {\n          elevations.push({ lat: val.lat, lng: val.lon, z: val.z });\n        });\n\n        if (eventTarget) {\n          eventTarget.fire('TrackStats:fetched', {\n            datatype: 'altitudes',\n            size: elevations.length,\n          });\n        }\n\n        resolve(elevations);\n      },\n      onFailure: (error) => {\n        if (retry) {\n          this._doFetchBatchAltitude(geometry, eventTarget, resolve, reject, false);\n        } else {\n          reject(new Error(error.message));\n        }\n      },\n    });\n  },\n\n  _fetchBatchAltitude(geometry, eventTarget) {\n    return new Promise((resolve, reject) => {\n      this._doFetchBatchAltitude(geometry, eventTarget, resolve, reject, true);\n    });\n  },\n\n  fetchSlopes(latlngs, eventTarget) {\n    const tiles = {};\n    const promises = [];\n    const crs = this._map ? this._map.options.crs : this.options.crs || L.CRS.EPSG3857;\n    const pixelOrigin = this._map ? this._map.getPixelOrigin() : this.options.pixelOrigin;\n\n    latlngs.forEach((coords) => {\n      const { tile, tilePixel } = latLngToTilePixel(coords, crs, 16, 256, pixelOrigin);\n\n      if (!(tile.x in tiles)) tiles[tile.x] = {};\n      if (!(tile.y in tiles[tile.x])) tiles[tile.x][tile.y] = [[]];\n\n      const arr = tiles[tile.x][tile.y];\n\n      if (arr[arr.length - 1].length > 50) arr.push([]);\n\n      arr[arr.length - 1].push({\n        lat: coords.lat,\n        lng: coords.lng,\n        x: tilePixel.x,\n        y: tilePixel.y,\n      });\n    });\n\n    Object.keys(tiles).forEach((x) => {\n      Object.keys(tiles[x]).forEach((y) => {\n        tiles[x][y].forEach((batch) => {\n          promises.push(this._queue.add(() => this._fetchBatchSlope(x, y, batch, eventTarget)));\n        });\n      });\n    });\n\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then((data) => {\n        const results = [];\n        data.forEach((x) => results.push(...x));\n        resolve(results);\n      }).catch((e) => reject(e));\n    });\n  },\n\n  _fetchBatchSlope(tilex, tiley, coords, eventTarget) {\n    const tilematrix = 16;\n    const tilerow = tiley;\n    const tilecol = tilex;\n    let lon = '';\n    let lat = '';\n    let x = '';\n    let y = '';\n    const apikey = this._apiKey;\n\n    coords.forEach((coord, idx) => {\n      if (idx > 0) {\n        lon += '|';\n        lat += '|';\n        x += '|';\n        y += '|';\n      }\n\n      lon += coord.lng.toString();\n      lat += coord.lat.toString();\n      x += coord.x.toString();\n      y += coord.y.toString();\n    });\n\n    const url = `slope.php?tilematrix=${tilematrix}&tilerow=${tilerow}&tilecol=${tilecol}`\n      + `&lon=${lon}&lat=${lat}&x=${x}&y=${y}&apikey=${apikey}`;\n\n    return new Promise((resolve, reject) => {\n      corslite(\n        url,\n        (err, resp) => {\n          if (!err) {\n            try {\n              const data = JSON.parse(resp.responseText);\n              if (data.results) {\n                const slopes = [];\n                data.results.forEach((val) => {\n                  slopes.push({ lat: val.lat, lng: val.lon, slope: val.slope });\n                });\n\n                if (eventTarget) {\n                  eventTarget.fire('TrackStats:fetched', {\n                    datatype: 'slopes',\n                    size: slopes.length,\n                  });\n                }\n\n                resolve(slopes);\n              } else {\n                reject(new Error(\"Impossible d'obtenir les données de pentes: résultats invalides\"));\n              }\n            } catch (ex) {\n              reject(ex);\n            }\n          } else {\n            try {\n              const data = JSON.parse(err.responseText);\n              reject(new Error(data.error));\n            } catch (ex) {\n              reject(ex);\n            }\n          }\n        },\n        false,\n      );\n    });\n  },\n});\n","const L = require('leaflet');\nconst corslite = require('@mapbox/corslite');\nconst Queue = require('promise-queue');\n\nmodule.exports = L.Class.extend({\n  options: {\n    queueConcurrency: 5,\n  },\n\n  initialize(apiKey, map, options) {\n    this._apiKey = apiKey;\n    this._map = map;\n    this.features = { altitudes: true, slopes: false };\n    this.precision = 6;\n    L.Util.setOptions(this, options);\n    this._queue = new Queue(this.options.queueConcurrency, Infinity);\n  },\n\n  fetchAltitudes(latlngs, eventTarget) {\n    const geometry = [];\n    const promises = [];\n\n    latlngs.forEach((coords) => {\n      geometry.push({\n        lon: coords.lng,\n        lat: coords.lat,\n      });\n      if (geometry.length === 50) {\n        // Launch batch\n        const g = geometry.splice(0);\n        promises.push(this._queue.add(() => this._fetchBatchAltitude(g, eventTarget)));\n      }\n    });\n\n    if (geometry.length > 0) {\n      // Launch last batch\n      const g = geometry.splice(0);\n      promises.push(this._queue.add(() => this._fetchBatchAltitude(g, eventTarget)));\n    }\n\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then((data) => {\n        const results = [];\n        data.forEach((x) => results.push(...x));\n        resolve(results);\n      }).catch((e) => reject(e));\n    });\n  },\n\n  _fetchBatchAltitude(geometry, eventTarget) {\n    const latlngs = geometry.map((x) => `${x.lat},${x.lon}`).join(',');\n    const url = 'https://open.mapquestapi.com/elevation/v1/profile?shapeFormat=raw&'\n      + `latLngCollection=${latlngs}&key=${this._apiKey}`;\n\n    return new Promise((resolve, reject) => {\n      corslite(\n        url,\n        (err, resp) => {\n          if (!err) {\n            try {\n              const data = JSON.parse(resp.responseText);\n              const elevations = [];\n              let previous;\n              let hasUndefinedValue = false;\n\n              data.elevationProfile.forEach((val, i) => {\n                if (val.height === -32768) {\n                  // If no height data exists, API returns -32768\n                  // As an approximation, we'll use the previous value\n                  val.height = previous;\n                  if (previous === undefined) hasUndefinedValue = true;\n                }\n\n                elevations.push({ lat: data.shapePoints[i * 2], lng: data.shapePoints[i * 2 + 1], z: val.height });\n                previous = val.height;\n              });\n\n              if (hasUndefinedValue) {\n                // If we're unlucky and no height data exists for the first point(s),\n                // then we approximate to the next value\n                for (let i = elevations.length - 1; i >= 0; i -= 1) {\n                  if (elevations[i].z === undefined) {\n                    elevations[i].z = previous;\n                  }\n                  previous = elevations[i].z;\n                }\n              }\n\n              if (eventTarget) {\n                eventTarget.fire('TrackStats:fetched', {\n                  datatype: 'altitudes',\n                  size: elevations.length,\n                });\n              }\n\n              resolve(elevations);\n            } catch (ex) {\n              reject(ex);\n            }\n          } else {\n            reject(new Error(err.response));\n          }\n        },\n        false,\n      );\n    });\n  },\n\n  fetchSlopes() {\n    return new Promise((_resolve, reject) => {\n      reject(new Error('Unsupported'));\n    });\n  },\n});\n","const L = require('leaflet');\nrequire('./stats.polyline');\nrequire('./stats.trackdrawer');\nconst Stats = require('./stats');\nconst cache = require('./cache');\nconst Geoportail = require('./geoportail');\nconst Mapquest = require('./mapquest');\n\nL.TrackStats = {\n  cache,\n  Geoportail,\n  Mapquest,\n  Stats,\n\n  geoportail(apiKey, map, options) {\n    return new Geoportail(apiKey, map, options);\n  },\n  mapquest(apiKey, map, options) {\n    return new Mapquest(apiKey, map, options);\n  },\n};\n\nmodule.exports = L.TrackStats;\n"],"names":["metadatas","precision","Math","roundE","value","decimals","pow","round","getKeyLatLng","lat","lng","getKey","coords","setPrecision","p","add","t","key","get","undefined","has","hasZ","hasSlope","addZ","addSlope","getAll","md","z","slope","clear","Object","keys","forEach","x","stats","L","Class","extend","options","initialize","latlngs","Util","setOptions","startingDistance","distance","altMin","Number","MAX_VALUE","altMax","MIN_VALUE","heightDiffUp","heightDiffDown","slopeMin","slopeMax","slopeTerrainMin","slopeTerrainMax","length","elevations","JSON","parse","stringify","dist","slopeOnTrack","push","j","i","localDistance","latLng","distanceTo","current","altDiff","degrees","atan","size","accumulate","accumulator","concat","getLatLngs","map","min","max","getDistance","getAltMin","getAltMax","getSlopeMin","getSlopeMax","getHeightDiffUp","getHeightDiffDown","getSlopeTerrainMin","getSlopeTerrainMax","radians","PI","getLatLngsFlatten","polyline","Array","isArray","result","Polyline","include","_stats","getStats","fetchAltitude","fetcher","eventTarget","features","altitudes","Promise","_resolve","reject","Error","cache","from","Set","filter","resolve","fire","datatype","fetchAltitudes","then","e","fetchSlope","slopes","fetchSlopes","fetchInfos","promises","all","computeStats","getCachedInfos","Stats","LatLng","prototype","TrackDrawer","Track","_steps","_total","_i","_bindEvent","on","_fireEvents","message","_finalizeRoute","routes","currentNode","_getNode","_firstNodeId","_nodesContainers","_getNext","nextEdge","nextNode","type","r","_computeStats","getStatsTotal","getStatsSteps","local","nodeContainer","idx","getLatLng","edgeContainer","_edgesContainers","addInitHook","latLngToTilePixel","latlng","crs","zoom","tileSize","pixelOrigin","layerPoint","latLngToPoint","floor","tile","divideBy","tileCorner","multiplyBy","subtract","tilePixel","queueConcurrency","apiKey","_apiKey","_map","_queue","Queue","Infinity","geometry","lon","g","splice","_fetchBatchAltitude","data","results","_doFetchBatchAltitude","retry","Gp","Services","getAltitude","sampling","positions","onSuccess","val","onFailure","error","tiles","CRS","EPSG3857","getPixelOrigin","y","arr","batch","_fetchBatchSlope","tilex","tiley","tilematrix","tilerow","tilecol","apikey","coord","toString","url","corslite","err","resp","responseText","ex","join","previous","hasUndefinedValue","elevationProfile","height","shapePoints","response","TrackStats","Geoportail","Mapquest","geoportail","mapquest"],"mappings":"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"}